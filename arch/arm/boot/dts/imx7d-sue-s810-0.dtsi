/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#include <dt-bindings/input/input.h>
#include "imx7d.dtsi"

/ {
	model = "StreamUnlimited stream810 module (imx7d)";
	compatible = "sue,stream810", "fsl,imx7d";

	memory {
		reg = <0x80000000 0x20000000>;
	};

	firmware {
		optee {
			compatible = "linaro,optee-tz";
			method = "smc";
		};
	};

	regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		reg_vref_1v8: regulator@0 {
			compatible = "regulator-fixed";
			reg = <0>;
			regulator-name = "vref-1v8";
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
		};

		reg_usb_otg1_vbus: regulator@1 {
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl_usbotg2_pwr_1>;
			compatible = "regulator-fixed";
			reg = <0>;
			regulator-name = "usb_otg1_vbus";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			gpio = <&gpio1 5 GPIO_ACTIVE_HIGH>;
			enable-active-high;
		};

		reg_usb_otg2_vbus: regulator@2 {
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl_usbotg2_pwr_2>;
			compatible = "regulator-fixed";
			reg = <1>;
			regulator-name = "usb_otg2_vbus";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			gpio = <&gpio1 7 GPIO_ACTIVE_HIGH>;
			enable-active-high;
		};
	};
};

&adc1 {
	vref-supply = <&reg_vref_1v8>;
	status = "okay";
};

&adc2 {
	vref-supply = <&reg_vref_1v8>;
	status = "okay";
};

&caam_sm {
	status = "disabled";
};

&caam_snvs {
	status = "disabled";
};

&cpu0 {
	arm-supply = <&vdd_arm>;
};

&crypto {
	status = "disabled";
};

&fec2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_enet2>;
	status = "okay";
	pinctrl-assert-gpios = <&gpio5 11 GPIO_ACTIVE_LOW>;

	assigned-clocks = <&clks IMX7D_ENET2_TIME_ROOT_SRC>,
			  <&clks IMX7D_ENET2_TIME_ROOT_CLK>,
			  <&clks IMX7D_ENET2_REF_ROOT_SRC>,
			  <&clks IMX7D_ENET2_REF_ROOT_CLK>;
	assigned-clock-parents = <&clks IMX7D_PLL_ENET_MAIN_100M_CLK>, <0>, <&clks IMX7D_PLL_ENET_MAIN_50M_CLK>, <0>;
	assigned-clock-rates = <0>, <100000000>, <0>, <50000000>;

	/* Override this list so we can change the last one (enet_out) */
	clocks = <&clks IMX7D_ENET_AXI_ROOT_CLK>,
		 <&clks IMX7D_ENET_AXI_ROOT_CLK>,
		 <&clks IMX7D_ENET2_TIME_ROOT_CLK>,
		 <&clks IMX7D_PLL_ENET_MAIN_125M_CLK>,
		 <&clks IMX7D_ENET2_REF_ROOT_CLK>;

	phy-mode = "rmii";

	phy-reset-gpios = <&gpio4 22 GPIO_ACTIVE_LOW>;
	phy-reset-duration = <10>;

	phy-handle = <&ethphy2>;

	mdio_bus: mdio {
		#address-cells = <1>;
		#size-cells = <0>;

		/* NOTE: The phy address of this node gets patched by U-Boot before booting,
		 * we need this to easily support the legacy L1 modules. Keep this in mind
		 * if you want to change anything here.
		 */
		ethphy2: ethernet-phy@0 {
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <0>;
		};
	};
};

&gpmi {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_gpmi_nand_1>;
	status = "okay";
	nand-on-flash-bbt;
};

&i2c2 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c2>;
	status = "okay";
};

&i2c4 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c4>;
	status = "okay";

	pmic: axp152@32 {
		compatible = "x-powers,axp152";
		reg = <0x32>;

		regulators {
			vdd_arm: dcdc4 {
				regulator-name = "vdd_arm";
				regulator-min-microvolt = <950000>;
				regulator-max-microvolt = <1250000>;
				regulator-boot-on;
				regulator-always-on;
			};
		};
	};

};

&irq_sec_vio {
	status = "disabled";
};

/*
 * NOTES for the last number in every line:
 * 	PAD_CTL_PUS_100K_DOWN	(0 << 5)
 * 	PAD_CTL_PUS_5K_UP	(1 << 5)
 * 	PAD_CTL_PUS_47K_UP	(2 << 5)
 * 	PAD_CTL_PUS_100K_UP	(3 << 5)
 * 	PAD_CTL_PUE		(1 << 4)
 * 	PAD_CTL_HYS		(1 << 3)
 * 	PAD_CTL_SRE_SLOW	(1 << 2)
 * 	PAD_CTL_SRE_FAST	(0 << 2)
 * 	PAD_CTL_DSE_X1		(0 << 0) \
 * 	PAD_CTL_DSE_X2		(2 << 0)  |___ NOTE: the numbering here is not a typo!
 * 	PAD_CTL_DSE_X4		(1 << 0)  |
 * 	PAD_CTL_DSE_X6		(3 << 0) /
 * 	NO_PAD_CTL		(1 << 31): indicate this pin does not need config.
 * 	SIO			(1 << 30): Software Input On Field.
 */
&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_32kHz>;

	imx7d-sue-s810 {
		pinctrl_wifi: wifigrp {
			fsl,pins = <
				MX7D_PAD_ECSPI2_SCLK__GPIO4_IO20	0x14 /* PCIE_W_DISABLE */
				MX7D_PAD_ECSPI2_SS0__GPIO4_IO23		0x14 /* PCIE_PERSTN */
				MX7D_PAD_SD1_RESET_B__GPIO5_IO2		0x14 /* WiFi PDn */
			>;
		};

		pinctrl_32kHz: _32kHzgrp {
			fsl,pins = <
				MX7D_PAD_SD1_WP__CCM_CLKO2		0x14
			>;
		};

		pinctrl_enet2: enet2grp {
			fsl,pins = <
				MX7D_PAD_GPIO1_IO14__ENET2_MDIO		0x03
				MX7D_PAD_GPIO1_IO15__ENET2_MDC		0x03

				MX7D_PAD_EPDC_GDRL__ENET2_RGMII_TX_CTL	0x01
				MX7D_PAD_EPDC_SDCE2__ENET2_RGMII_TD0	0x01
				MX7D_PAD_EPDC_SDCE3__ENET2_RGMII_TD1	0x01

				MX7D_PAD_EPDC_SDCE0__ENET2_RGMII_RX_CTL	0x01
				MX7D_PAD_EPDC_SDCLK__ENET2_RGMII_RD0	0x01
				MX7D_PAD_EPDC_SDLE__ENET2_RGMII_RD1	0x01
				MX7D_PAD_EPDC_SDCE1__ENET2_RX_ER	0x01

				MX7D_PAD_EPDC_BDR0__CCM_ENET_REF_CLK2	0x40000001

				/* IRQ */
				MX7D_PAD_SD2_RESET_B__GPIO5_IO11	0x80000000

				/* nRESET pin */
				MX7D_PAD_ECSPI2_MISO__GPIO4_IO22	0x80000000
			>;
		};

		pinctrl_gpmi_nand_1: gpmi-nand-1 {
			fsl,pins = <
				MX7D_PAD_SD3_CLK__NAND_CLE		0x71
				MX7D_PAD_SD3_CMD__NAND_ALE		0x71
				MX7D_PAD_SAI1_MCLK__NAND_WP_B		0x71
				MX7D_PAD_SAI1_TX_BCLK__NAND_CE0_B	0x71
				MX7D_PAD_SAI1_TX_DATA__NAND_READY_B	0x74
				MX7D_PAD_SD3_STROBE__NAND_RE_B		0x71
				MX7D_PAD_SD3_RESET_B__NAND_WE_B		0x71
				MX7D_PAD_SD3_DATA0__NAND_DATA00		0x71
				MX7D_PAD_SD3_DATA1__NAND_DATA01		0x71
				MX7D_PAD_SD3_DATA2__NAND_DATA02		0x71
				MX7D_PAD_SD3_DATA3__NAND_DATA03		0x71
				MX7D_PAD_SD3_DATA4__NAND_DATA04		0x71
				MX7D_PAD_SD3_DATA5__NAND_DATA05		0x71
				MX7D_PAD_SD3_DATA6__NAND_DATA06		0x71
				MX7D_PAD_SD3_DATA7__NAND_DATA07		0x71
			>;
		};

		pinctrl_i2c2: i2c2grp {
			fsl,pins = <
				MX7D_PAD_UART2_RX_DATA__I2C2_SCL	0x4000007f
				MX7D_PAD_UART2_TX_DATA__I2C2_SDA	0x4000007f
			>;
		};

		pinctrl_i2c4: i2c4grp {
			fsl,pins = <
				MX7D_PAD_ENET1_RGMII_TD2__I2C4_SCL	0x4000007f
				MX7D_PAD_ENET1_RGMII_TD3__I2C4_SDA	0x4000007f
			>;
		};

		pinctrl_sai1: sai1grp {
			fsl,pins = <
				MX7D_PAD_ENET1_RX_CLK__SAI1_TX_BCLK	0x13
				MX7D_PAD_SAI1_TX_SYNC__SAI1_TX_SYNC	0x13
				MX7D_PAD_ENET1_COL__SAI1_TX_DATA0	0x13
				MX7D_PAD_SAI1_RX_DATA__SAI1_RX_DATA0	0x13
			>;
		};

		pinctrl_uart1: uart1grp {
			fsl,pins = <
				MX7D_PAD_UART1_TX_DATA__UART1_DCE_TX	0x79
				MX7D_PAD_UART1_RX_DATA__UART1_DCE_RX	0x79
			>;
		};

		pinctrl_uart5: uart5grp {
			fsl,pins = <
				MX7D_PAD_I2C4_SCL__UART5_DCE_RX		0x79
				MX7D_PAD_I2C4_SDA__UART5_DCE_TX		0x79
				MX7D_PAD_I2C3_SCL__UART5_DCE_CTS	0x79
				MX7D_PAD_I2C3_SDA__UART5_DCE_RTS	0x79
			>;
		};

		pinctrl_uart6: uart6grp {
			fsl,pins = <
				MX7D_PAD_ECSPI1_MOSI__UART6_DCE_TX	0x79
				MX7D_PAD_ECSPI1_SCLK__UART6_DCE_RX	0x79
			>;
		};
	};
};

&iomuxc_lpsr {
	pinctrl-names = "default";

	imx7d-sue-s810 {
		pinctrl_usbotg2_pwr_1: usbotg1-2 {
			fsl,pins = <
				MX7D_PAD_GPIO1_IO05__GPIO1_IO5	0x14
			>;
		};

		pinctrl_usbotg2_pwr_2: usbotg2-2 {
			fsl,pins = <
				MX7D_PAD_GPIO1_IO07__GPIO1_IO7	0x14
			>;
		};

		pinctrl_sai1_mclk: sai1grp_mclk {
			fsl,pins = <
				MX7D_PAD_GPIO1_IO01__SAI1_MCLK	0x14
			>;
		};

		pinctrl_wdog1: wdog1grp {
			fsl,pins = <
				MX7D_PAD_GPIO1_IO00__WDOD1_WDOG_B 0x74
			>;
		};
	};
};

&pcie {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_wifi>;

	reset-gpio = <&gpio4 23 GPIO_ACTIVE_LOW>;
	disable-gpio = <&gpio4 20 GPIO_ACTIVE_LOW>;
	power-on-gpio = <&gpio5 2 GPIO_ACTIVE_LOW>;

	status = "okay";
};

&sai1 {
	/*
	 * We are setting the clock rate of SAI1_ROOT_CLK to to the MCLK for 48kHz and the PLL is
	 * set so we can generate the MCLK for 48kHz. This will preconfigure the divider so when
	 * we switch the PLL to a frequency for 44.1kHz, we don't need to change any dividers to
	 * have the proper MCLK.
	 */
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_sai1 &pinctrl_sai1_mclk>;
	assigned-clocks = <&clks IMX7D_PLL_AUDIO_POST_DIV>,
			  <&clks IMX7D_SAI1_ROOT_SRC>,
			  <&clks IMX7D_SAI1_ROOT_CLK>;
	assigned-clock-parents = <0>, <&clks IMX7D_PLL_AUDIO_POST_DIV>;
	assigned-clock-rates = <884736000>, <0>, <24576000>;
	sue,persistent-clocks;
	status = "okay";
};

&snvs_poweroff {
	/*
	 * We disable the poweroff driver since we are using the PMIC for
	 * poweroff.
	 */
	status = "disabled";
};

&snvs_pwrkey {
	status = "disabled";
};

&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
	assigned-clocks = <&clks IMX7D_UART1_ROOT_SRC>;
	assigned-clock-parents = <&clks IMX7D_OSC_24M_CLK>;
	status = "okay";
};

&uart5 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart5>;
	assigned-clocks = <&clks IMX7D_UART5_ROOT_SRC>;
	assigned-clock-parents = <&clks IMX7D_PLL_SYS_MAIN_240M_CLK>;
	fsl,uart-has-rtscts;
	status = "okay";
};

&uart6 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart6>;
	assigned-clocks = <&clks IMX7D_UART6_ROOT_SRC>;
	assigned-clock-parents = <&clks IMX7D_OSC_24M_CLK>;
	status = "okay";
};

&usbotg1 {
	vbus-supply = <&reg_usb_otg1_vbus>;
	dr_mode = "host";
	status = "okay";
};

&usbotg2 {
	vbus-supply = <&reg_usb_otg2_vbus>;
	dr_mode = "host";
	status = "okay";
};

&wdog1 {
	pinctrl-0 = <&pinctrl_wdog1>;
	fsl,wdog_b;
	status = "okay";
};
