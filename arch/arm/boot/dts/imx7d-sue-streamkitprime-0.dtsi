/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#include <dt-bindings/input/input.h>

/ {
	model = "StreamUnlimited stream810 StreamKit Prime board (imx7d)";
	compatible = "sue,stream810-demo", "sue,stream810", "fsl,imx7d";

	audio {
		compatible = "sue,am33xx-generic-audio";
		sue,card-name = "Stream Audio on imx7";

		clocks = <&clks IMX7D_AUDIO_MCLK_ROOT_CLK>,
			 <&clks IMX7D_AUDIO_MCLK_ROOT_CLK>,
			 <&clks IMX7D_PLL_AUDIO_POST_DIV>;
		clock-names = "mclk", "mclk_rx", "pll";

		assigned-clocks = <&clks IMX7D_AUDIO_MCLK_ROOT_SRC>,
				  <&clks IMX7D_AUDIO_MCLK_ROOT_CLK>;
		assigned-clock-parents = <&clks IMX7D_PLL_AUDIO_POST_DIV>;
		assigned-clock-rates = <0>, <24576000>;

		sue,early-mclk;

		links {
			sai1_link: link@0 {
				sue,name = "analog1";
				sue,stream-name = "I2S1";

				sue,platform = <&sai1>;
				sue,cpu-dai-name = "308a0000.sai";
				sue,codec = <&pcm_dummy1>;
				sue,codec-dai-name = "Dummy PCM Codec";
			};

			sai2_link: link@1 {
				sue,name = "analog2";
				sue,stream-name = "I2S2";

				sue,platform = <&sai2>;
				sue,cpu-dai-name = "308b0000.sai";
				sue,codec = <&pcm_dummy2>;
				sue,codec-dai-name = "Dummy PCM Codec";
			};
		};
	};

	pcm_dummy1: pcm_dummy1 {
		compatible = "sue,pcm_dummy";
	};

	pcm_dummy2: pcm_dummy2 {
		compatible = "sue,pcm_dummy";
	};

	lcd_backlight {
		compatible = "pwm-backlight";
		pwms = <&pwm3 0 5000000>;
		brightness-levels = <0 3 5 8 10 13 15 18 20 23 26 28 31 33 36 38 41 43 46 48 51 54 56 59 61 64 66 69 71 74
			77 79 82 84 87 89 92 94 97 99 102 105 107 110 112 115 117 120 122 125 127 130 133 135 138 140 143 145 148 150
			153 156 158 161 163 166 168 171 173 176 179 181 184 186 189 191 194 196 199 201 204 207 209 212 214 217 219 222 224 227
			229 232 235 237 240 242 245 247 250 252 255>;
		default-brightness-level = <100>;
		status = "okay";
	};
};

&ecspi3 {
	fsl,spi-num-chipselects = <1>;
	pinctrl-names = "default";

	// disable CS pin - conflicts with Host IRQ line (i2c mode)
	// pinctrl-0 = <&pinctrl_ecspi3 &pinctrl_ecspi3_cs>;
	pinctrl-0 = <&pinctrl_ecspi3>;
	// cs-gpios = <&gpio4 11 0>;

	status = "okay";

	spidev0: spi@0 {
		compatible = "spidev";
		reg = <0>;
		spi-max-frequency = <54000000>;
	};
};

/*
 * FEC1 is disabled per default on the stream810 module for the democlient because the
 * reset_n pin `MX7D_PAD_LCD_DATA15__GPIO3_IO20` collides with `MX7D_PAD_LCD_DATA15__LCD_DATA15`.
 * If you want to enable FEC1, make sure you remove LCD_DATA15 from the LCD pinmux and have the
 * apropriate hardware rework.
 */
&fec1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_enet1>;
	status = "disabled";
	pinctrl-assert-gpios = <&gpio1 11 GPIO_ACTIVE_LOW>;


	assigned-clocks = <&clks IMX7D_ENET1_TIME_ROOT_SRC>,
			  <&clks IMX7D_ENET1_TIME_ROOT_CLK>,
			  <&clks IMX7D_ENET1_REF_ROOT_SRC>,
			  <&clks IMX7D_ENET1_REF_ROOT_CLK>;
	assigned-clock-parents = <&clks IMX7D_PLL_ENET_MAIN_100M_CLK>, <0>, <&clks IMX7D_PLL_ENET_MAIN_50M_CLK>, <0>;
	assigned-clock-rates = <0>, <100000000>, <0>, <50000000>;

	/* Override this list so we can change the last one (enet_out) */
	clocks = <&clks IMX7D_ENET_AXI_ROOT_CLK>,
		 <&clks IMX7D_ENET_AXI_ROOT_CLK>,
		 <&clks IMX7D_ENET1_TIME_ROOT_CLK>,
		 <&clks IMX7D_PLL_ENET_MAIN_125M_CLK>,
		 <&clks IMX7D_ENET1_REF_ROOT_CLK>;

	phy-mode = "rmii";

	phy-reset-gpios = <&gpio3 20 GPIO_ACTIVE_LOW>;
	phy-reset-duration = <10>;

	phy-handle = <&ethphy1>;
};

&uart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3>;
	assigned-clocks = <&clks IMX7D_UART3_ROOT_SRC>;
	assigned-clock-parents = <&clks IMX7D_OSC_24M_CLK>;
	status = "okay";
};

/*
 * NOTES for the last number in every line:
 * 	PAD_CTL_PUS_100K_DOWN	(0 << 5)
 * 	PAD_CTL_PUS_5K_UP	(1 << 5)
 * 	PAD_CTL_PUS_47K_UP	(2 << 5)
 * 	PAD_CTL_PUS_100K_UP	(3 << 5)
 * 	PAD_CTL_PUE		(1 << 4)
 * 	PAD_CTL_HYS		(1 << 3)
 * 	PAD_CTL_SRE_SLOW	(1 << 2)
 * 	PAD_CTL_SRE_FAST	(0 << 2)
 * 	PAD_CTL_DSE_X1		(0 << 0)
 * 	PAD_CTL_DSE_X2		(1 << 0)
 * 	PAD_CTL_DSE_X3		(2 << 0)
 * 	PAD_CTL_DSE_X4		(3 << 0)
 * 	NO_PAD_CTL		(1 << 31): indicate this pin does not need config.
 * 	SIO			(1 << 30): Software Input On Field.
 */
&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hostlink>;

	imx7d-sue-streamkitprime {
		pinctrl_uart3: uart3grp {
			fsl,pins = <
				MX7D_PAD_UART3_TX_DATA__UART3_DCE_TX	0x79
				MX7D_PAD_UART3_RX_DATA__UART3_DCE_RX	0x79
			>;
		};

		pinctrl_hostlink: hostlinkgrp {
			fsl,pins = <
				MX7D_PAD_I2C2_SDA__GPIO4_IO11		0x30	/* nIRQ (47k pull up) */
			>;
		};

		pinctrl_ecspi3: ecspi3grp {
			fsl,pins = <
				MX7D_PAD_I2C1_SCL__ECSPI3_MISO		0x2
				MX7D_PAD_I2C1_SDA__ECSPI3_MOSI		0x2
				MX7D_PAD_I2C2_SCL__ECSPI3_SCLK		0x2
			>;
		};

		pinctrl_ecspi3_cs: ecspi3_cs_grp {
			fsl,pins = <
				MX7D_PAD_I2C2_SDA__GPIO4_IO11	0x80000000
			>;
		};

		pinctrl_enet1: enet1grp {
			fsl,pins = <
				MX7D_PAD_ENET1_RGMII_TX_CTL__ENET1_RGMII_TX_CTL	0x1
				MX7D_PAD_ENET1_RGMII_TD0__ENET1_RGMII_TD0	0x1
				MX7D_PAD_ENET1_RGMII_TD1__ENET1_RGMII_TD1	0x1

				MX7D_PAD_ENET1_RGMII_RX_CTL__ENET1_RGMII_RX_CTL	0x1
				MX7D_PAD_ENET1_RGMII_RD0__ENET1_RGMII_RD0	0x1
				MX7D_PAD_ENET1_RGMII_RD1__ENET1_RGMII_RD1	0x1
				MX7D_PAD_ENET1_RGMII_RXC__ENET1_RX_ER		0x1

				MX7D_PAD_ENET1_TX_CLK__CCM_ENET_REF_CLK1	0x40000001

				/* IRQ */
				MX7D_PAD_GPIO1_IO11__GPIO1_IO11			0x80000000
				/* nRESET pin */
				MX7D_PAD_LCD_DATA15__GPIO3_IO20			0x80000000
			>;
		};

		pinctrl_lcdif_ctrl: lcdifctrlgrp {
			fsl,pins = <
				MX7D_PAD_LCD_CLK__LCD_CLK	0x14
				MX7D_PAD_LCD_HSYNC__LCD_HSYNC	0x14
				MX7D_PAD_LCD_VSYNC__LCD_VSYNC	0x14
				MX7D_PAD_EPDC_BDR1__LCD_ENABLE	0x14
			>;
		};

		pinctrl_lcdif_dat: lcdifdatgrp {
			fsl,pins = <
				MX7D_PAD_LCD_DATA00__LCD_DATA0	0x14
				MX7D_PAD_LCD_DATA01__LCD_DATA1	0x14
				MX7D_PAD_EPDC_DATA02__LCD_DATA2 0x14
				MX7D_PAD_EPDC_DATA03__LCD_DATA3 0x14
				MX7D_PAD_EPDC_DATA04__LCD_DATA4 0x14
				MX7D_PAD_LCD_DATA05__LCD_DATA5	0x14
				MX7D_PAD_LCD_DATA06__LCD_DATA6	0x14
				MX7D_PAD_LCD_DATA07__LCD_DATA7	0x14
				MX7D_PAD_LCD_DATA08__LCD_DATA8	0x14
				MX7D_PAD_LCD_DATA09__LCD_DATA9	0x14
				MX7D_PAD_LCD_DATA10__LCD_DATA10	0x14
				MX7D_PAD_LCD_DATA11__LCD_DATA11	0x14
				MX7D_PAD_LCD_DATA12__LCD_DATA12	0x14
				MX7D_PAD_LCD_DATA13__LCD_DATA13	0x14
				MX7D_PAD_LCD_DATA14__LCD_DATA14	0x14
				MX7D_PAD_LCD_DATA15__LCD_DATA15	0x14
			>;
		};

		pinctrl_pwm3: pwm3grp {
			fsl,pins = <
				MX7D_PAD_GPIO1_IO10__PWM3_OUT	0x14
			>;
		};

		pinctrl_sai2: sai2grp {
			fsl,pins = <
				MX7D_PAD_SAI2_TX_BCLK__SAI2_TX_BCLK	0x11	/* I2S_BCLK_OUT2 */
				MX7D_PAD_SAI2_TX_SYNC__SAI2_TX_SYNC	0x11	/* I2S_WCLK_OUT2 */
				MX7D_PAD_SAI2_TX_DATA__SAI2_TX_DATA0	0x11	/* I2S_DATA_OUT2 */
				MX7D_PAD_SAI2_RX_DATA__SAI2_RX_DATA0	0x11	/* I2S_DATA_IN2 */
			>;
		};
	};
};

&sai2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_sai2>;
	assigned-clocks = <&clks IMX7D_PLL_AUDIO_POST_DIV>,
			  <&clks IMX7D_SAI2_ROOT_SRC>,
			  <&clks IMX7D_SAI2_ROOT_CLK>;
	assigned-clock-parents = <0>, <&clks IMX7D_PLL_AUDIO_POST_DIV>;
	assigned-clock-rates = <884736000>, <0>, <24576000>;
	sue,persistent-clocks;
	status = "okay";
};

&iomuxc_lpsr {
	imx7d-sue-streamkitprime {
	};
};

&lcdif {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_lcdif_dat
		     &pinctrl_lcdif_ctrl>;
	display = <&display0>;
	status = "okay";

	display0: display {
		bits-per-pixel = <16>;
		bus-width = <16>;

		display-timings {
			native-mode = <&timing0>;
			timing0: 800x480px {
				/* 800x480 */
				clock-frequency = <50000000>;
				hactive = <800>;
				vactive = <480>;
				hfront-porch = <1>;
				hback-porch = <87>;
				hsync-len = <1>;
				vback-porch = <32>;
				vfront-porch = <1>;
				vsync-len = <1>;

				hsync-active = <0>;
				vsync-active = <0>;
				pixelclk-active = <0>;
				de-active = <1>;
			};
		};
	};
};

&mdio_bus {
	ethphy1: ethernet-phy@1 {
		compatible = "ethernet-phy-ieee802.3-c22";
		reg = <1>;
	};
};

&pwm3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm3>;
	status = "okay";
};
